-- Roblox Hoopz Script for Delta Executor
-- Features: Camlock, Auto Power, Auto Guard, Speedboost, Autoshoot
-- UI: Mobile-friendly toggle buttons

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local Camera = Workspace.CurrentCamera

-- Create Mobile UI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.Name = "HoopzScriptUI"
ScreenGui.ResetOnSpawn = false  -- Persist across respawns

local UIFrame = Instance.new("Frame")
UIFrame.Size = UDim2.new(0, 200, 0, 300)  -- Small size for mobile
UIFrame.Position = UDim2.new(0, 10, 0.5, -150)  -- Bottom-left corner
UIFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
UIFrame.BackgroundTransparency = 0.5
UIFrame.Parent = ScreenGui

local TitleLabel = Instance.new("TextLabel")
TitleLabel.Size = UDim2.new(1, 0, 0, 30)
TitleLabel.Position = UDim2.new(0, 0, 0, 0)
TitleLabel.BackgroundTransparency = 1
TitleLabel.Text = "Hoopz Script"
TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleLabel.Parent = UIFrame

-- Toggle buttons for each feature
local toggles = {
    Camlock = false,
    AutoPower = false,
    AutoGuard = false,
    Speedboost = false,
    Autoshoot = false
}

local function createToggleButton(name, positionY)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, 0, 0, 40)
    button.Position = UDim2.new(0, 0, 0, positionY)
    button.BackgroundColor3 = Color3.fromRGB(0, 100, 0)  -- Green when off
    button.Text = name .. " (OFF)"
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Parent = UIFrame
    
    button.MouseButton1Click:Connect(function()
        toggles[name] = not toggles[name]
        button.BackgroundColor3 = toggles[name] and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(0, 100, 0)
        button.Text = name .. " (" .. (toggles[name] and "ON" or "OFF") .. ")"
    end)
end

createToggleButton("Camlock", 40)
createToggleButton("AutoPower", 90)
createToggleButton("AutoGuard", 140)
createToggleButton("Speedboost", 190)
createToggleButton("Autoshoot", 240)

-- Helper Functions
local function getNearestHoop()
    local hoops = Workspace:FindFirstChild("Hoops") and Workspace.Hoops:GetChildren() or {}  -- Adjust based on game structure
    local nearestHoop = nil
    local minDistance = math.huge
    local playerPosition = Character.HumanoidRootPart.Position
    
    for _, hoop in ipairs(hoops) do
        if hoop:IsA("BasePart") then  -- Assuming hoops are BaseParts
            local distance = (hoop.Position - playerPosition).Magnitude
            if distance < minDistance then
                minDistance = distance
                nearestHoop = hoop
            end
        end
    end
    
    return nearestHoop
end

local function camlockToHoop(hoop)
    if hoop then
        Camera.CameraType = Enum.CameraType.Scriptable
        Camera.CFrame = CFrame.new(Character.HumanoidRootPart.Position, hoop.Position)
    end
end

local function autoShoot()
    local ball = Workspace:FindFirstChild("Ball")  -- Assuming the ball is a part named "Ball"
    local hoop = getNearestHoop()
    
    if ball and hoop and Character:FindFirstChild("HumanoidRootPart") then
        local ballPosition = ball.Position
        local playerPosition = Character.HumanoidRootPart.Position
        local direction = (hoop.Position - ballPosition).Unit * 50  -- Adjust velocity for auto power
        
        ball.Velocity = direction  -- Simple velocity application; adjust for game physics
        ball.Position = playerPosition + Vector3.new(0, 5, 0)  -- Position ball near player before shooting
    end
end

local function autoGuard()
    local opponents = {}  -- Find opponents (e.g., other players)
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            table.insert(opponents, player.Character.HumanoidRootPart.Position)
        end
    end
    
    if #opponents > 0 then
        local nearestOpponent = opponents[1]
        local distanceToNearest = (Character.HumanoidRootPart.Position - nearestOpponent).Magnitude
        
        for _, pos in ipairs(opponents) do
            local distance = (Character.HumanoidRootPart.Position - pos).Magnitude
            if distance < distanceToNearest then
                nearestOpponent = pos
                distanceToNearest = distance
            end
        end
        
        -- Move towards nearest opponent to guard
        Humanoid:MoveTo(nearestOpponent)
    end
end

-- Main Logic
Humanoid.StateChanged:Connect(function(oldState, newState)
    if newState == Enum.HumanoidStateType.Jumping then  -- Detect jump
        if toggles.Camlock then
            local hoop = getNearestHoop()
            if hoop then
                camlockToHoop(hoop)
            end
        end
        
        if toggles.Autoshoot then
            autoShoot()  -- Auto shoot when jumping
        end
    end
end)

RunService.RenderStepped:Connect(function()
    if toggles.Speedboost then
        Humanoid.WalkSpeed = 50  -- Boost speed; adjust as needed (default is 16)
    else
        Humanoid.WalkSpeed = 16  -- Reset to default
    end
    
    if toggles.AutoGuard then
        autoGuard()  -- Continuously guard
    end
    
    if toggles.AutoPower and toggles.Autoshoot then  -- Enhance auto shoot with auto power
        -- This is simplistic; in a real game, calculate based on distance
        local hoop = getNearestHoop()
        if hoop then
            local distance = (Character.HumanoidRootPart.Position - hoop.Position).Magnitude
            local powerMultiplier = distance / 10  -- Example: Scale power by distance
            -- Apply to autoShoot if needed (e.g., modify velocity)
        end
    end
end)

print("Hoopz Script Loaded! Use the UI to toggle features.")
